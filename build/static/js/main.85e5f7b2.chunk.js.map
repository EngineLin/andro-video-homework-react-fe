{"version":3,"sources":["api/forms/TodoListForms.js","utils/localStorage.js","store/orders.js","components/Order/styled.js","components/Order/index.jsx","views/TodoList/styled.js","views/TodoList/index.jsx","styled.js","index.js","App.jsx"],"names":["StoreOrder","id","name","price","note","this","uuidv4","find","target","JSON","parse","localStorage","getItem","length","update","order","setItem","stringify","initOrders","create","initState","orders","Container","styled","div","FlexDiv","ContextWrapper","Name","input","props","disabled","Price","NoteLabel","p","Note","textarea","useState","nameState","setName","priceState","setPrice","noteState","setNote","isEditable","setIsEditable","dispatch","useDispatch","Tooltip","title","arrow","value","type","onChange","e","ButtonGroup","size","Button","variant","color","startIcon","onClick","payload","onEdit","endIcon","onDelete","Header","OrdersWrapper","AddButtonWrapper","TodoList","useSelector","state","useEffect","map","it","Order","key","IconButton","createEmpty","fontSize","Layout","store","createStore","action","copy","push","updateLocalStorage","index","findIndex","filter","findLocalStorage","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85e5f7b2.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid'\n\nexport class StoreOrder {\n    id\n    name\n    price\n    note\n\n    constructor(\n      id,\n      name = '',\n      price = -1,\n      note = ''\n    ) {\n        // Version 4 (random) - Created from cryptographically-strong random values\n        this.id = id || uuidv4()\n        this.name = name\n        this.price = price\n        this.note = note\n    }\n\n    static create({ id, name, price, note }) {\n        return new StoreOrder(id, name, price, note)\n    }\n\n    static createEmpty() {\n        return new StoreOrder(null, 'New order.', 0, 'New note.')\n    }\n}\n","const KEY = 'key-avhw'\n\n// method name 'find' means it might get value or null.\nexport const find = () => {\n    const target = JSON.parse(localStorage.getItem(KEY))\n    return target && target.length ? target : null\n}\n\nexport const update = order => {\n    localStorage.setItem(KEY, JSON.stringify(order))\n}\n","import { StoreOrder } from '../api/forms/TodoListForms'\nimport {\n    find as findLocalStorage,\n    update as updateLocalStorage,\n} from '../utils/localStorage'\n\nexport const ADD_ORDER = 'ADD_ORDER'\nexport const DELETE_ORDER = 'DELETE_ORDER'\nexport const EDIT_ORDER ='EDIT_ORDER'\nexport const RESET_ORDERS = 'RESET_ORDERS'\nexport const FETCH_ORDERS = 'FETCH_ORDERS'\n\nconst initOrders = () => [\n  StoreOrder.create({ name: `Build a frontend app with react in JavaScript.`, price: 100, note: `` }),\n  StoreOrder.create({ name: `An order should include two required fields, 'name'(text) and 'price'(number). And one multi-line text optional field 'note'.`, price: 50, note: `` }),\n  StoreOrder.create({ name: `A list page to show all orders.`, price: 10, note: `` }),\n  StoreOrder.create({ name: `The user can create a new order from the list page`, price: 20, note: `` }),\n  StoreOrder.create({ name: `The user can edit and delete the order at the list page`, price: 30, note: `` }),\n  StoreOrder.create({ name: `Upload the source code to GitHub, Bitbucket or other services. And make sure we can access the project.`, price: 10, note: `` }),\n  StoreOrder.create({ name: `You can store data at the local storage.`, price: 20, note: `` }),\n  StoreOrder.create({ name: `You can use any vendor packages.`, price: 10, note: `` }),\n  StoreOrder.create({ name: `We don't need the API server.`, price: 10, note: `` }),\n  StoreOrder.create({ name: `Please build a good architecture to integrate with RESTful APIs. Maybe we just change some code, this app will be work with API server.`, price: 200, note: `` }),\n]\n\nconst initState = {\n    orders: []\n}\n\nexport const reducer = (state = initState, action) => {\n    switch (action.type) {\n        case ADD_ORDER: {\n            const copy = [...state.orders]\n            copy.push(action.payload.order)\n\n            // TODO: Change to work with APIs\n            updateLocalStorage(copy)\n            return { orders: copy }\n        }\n        case EDIT_ORDER: {\n            const copy = [...state.orders]\n            const index = copy.findIndex(it => it.id === action.payload.order.id)\n            copy[index] = action.payload.order\n\n            // TODO: Change to work with APIs\n            updateLocalStorage(copy)\n            return { orders: copy }\n        }\n        case DELETE_ORDER: {\n            const copy = [...state.orders].filter(it => it.id !== action.payload.id)\n\n            // TODO: Change to work with APIs\n            updateLocalStorage(copy)\n            return { orders: copy }\n        }\n        case FETCH_ORDERS: {\n            const orders = findLocalStorage() || initOrders()\n            console.log(findLocalStorage())\n\n            // TODO: Change to work with APIs\n            updateLocalStorage(state.orders)\n            return { orders }\n        }\n        case RESET_ORDERS: {\n            const orders = initOrders()\n\n            // TODO: Change to work with APIs\n            updateLocalStorage(orders)\n            return { orders }\n        }\n        default:\n            return state;\n    }\n};\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  background: white;\n  padding: 10px;\n  box-sizing: content-box;\n  border-radius: 10px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, .3);\n  margin: 8px;\n`\n\nexport const FlexDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const ContextWrapper = styled.div`\n  width: calc(100% - 200px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`\n\nexport const Name = styled.input`\n  width: calc(85% - 30px);\n  margin: 0 15px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-size: 18px; \n  ${props => props.disabled ? 'border: 0;' : ''};\n  \n  &:focus {\n    ${props => props.disabled ? 'outline: 0;' : ''};\n  }\n`\n\nexport const Price = styled.input`\n  width: calc(15% - 10px);\n  margin: 0 5px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-size: 16px;  \n  font-weight: 700;\n  ${props => props.disabled ? 'border: 0;' : ''};\n  \n  &:focus {\n    ${props => props.disabled ? 'outline: 0;' : ''};\n  }\n`\n\nexport const NoteLabel = styled.p`\n  font-size: 16px;\n  margin: 5px 0;\n`\n\nexport const Note = styled.textarea`\n  margin: 5px 0;\n  font-size: 14px;\n  padding: 0 15px;\n  box-sizing: border-box;\n  width: 100%;\n  resize: none;\n  ${props => props.disabled ? 'border: 0;' : ''};\n  \n  &:focus {\n    ${props => props.disabled ? 'outline: 0;' : ''};\n  }\n`\n","import React, { useState } from 'react'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { useDispatch } from 'react-redux'\nimport { StoreOrder } from '../../api/forms/TodoListForms';\nimport { DELETE_ORDER, EDIT_ORDER } from '../../store/orders'\n\nimport {\n    Container,\n    ContextWrapper,\n    Name,\n    Price,\n    FlexDiv,\n    NoteLabel,\n    Note\n} from './styled'\n\nexport default (props) => {\n    const { id, name, price, note } = props\n    const [nameState, setName] = useState(name)\n    const [priceState, setPrice] = useState(price)\n    const [noteState, setNote] = useState(note)\n    const [isEditable, setIsEditable] = useState(false)\n\n    const dispatch = useDispatch()\n    const onEdit = order => dispatch({\n        type: EDIT_ORDER,\n        payload: { order }\n    })\n    const onDelete = id => dispatch({\n        type: DELETE_ORDER,\n        payload: { id }\n    })\n\n    const onNameChange = e => void setName(e.target.value)\n    const onPriceChange = e => void setPrice(e.target.value)\n    const onNoteChange = e => void setNote(e.target.value)\n    const onEditClick = () => {\n        if (isEditable) {\n            const order = StoreOrder.create({\n                id,\n                name: nameState,\n                price: priceState,\n                note: noteState\n            })\n            onEdit(order)\n            setIsEditable(false)\n        } else {\n            setIsEditable(true)\n        }\n    }\n\n    return (\n      <Container>\n          <FlexDiv>\n              <ContextWrapper>\n                  <Tooltip title={nameState} arrow>\n                      <Name\n                        value={nameState}\n                        type=\"text\"\n                        onChange={onNameChange}\n                        disabled={!isEditable}\n                      />\n                  </Tooltip>\n                  <Tooltip title={priceState} arrow>\n                      <Price\n                        value={priceState}\n                        type=\"number\"\n                        onChange={onPriceChange}\n                        disabled={!isEditable}\n                      />\n                  </Tooltip>\n              </ContextWrapper>\n\n              <ButtonGroup size=\"medium\">\n                  <Button\n                    variant=\"contained\"\n                    color={isEditable ? 'secondary' : 'primary'}\n                    startIcon={<EditIcon />}\n                    onClick={onEditClick}\n                  >\n                      { isEditable ? 'Done' : 'Edit' }\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"inherit\"\n                    endIcon={<DeleteIcon />}\n                    onClick={() => onDelete(id)}\n                  >\n                      Delete\n                  </Button>\n              </ButtonGroup>\n          </FlexDiv>\n\n          <NoteLabel>Note</NoteLabel>\n          <Note value={noteState} onChange={onNoteChange} disabled={!isEditable} />\n      </Container>\n    );\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 750px;\n  border-radius: 15px;\n  box-shadow: 0 1px 5px rgba(0, 0, 0, .3);\n  box-sizing: border-box;\n`\n\nexport const Header = styled.div`\n  width: 100%;\n  padding: 15px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, .3);\n  box-sizing: border-box;\n  \n  h1 {\n    font-size: 26px;\n    font-weight: 600;\n    margin-right: 100px;\n  }\n`\n\nexport const OrdersWrapper = styled.div`\n  padding: 15px 0;\n  background: #e7e7e7;\n`\n\nexport const AddButtonWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  border-top: 1px solid rgba(0, 0, 0, .3);\n  box-sizing: border-box;\n`\n\n","import React, {useEffect} from 'react';\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Order from '../../components/Order'\nimport { StoreOrder } from '../../api/forms/TodoListForms';\nimport {ADD_ORDER, FETCH_ORDERS, RESET_ORDERS} from '../../store/orders';\n\nimport {\n    Container,\n    Header,\n    OrdersWrapper,\n    AddButtonWrapper,\n} from './styled'\n\nexport default function TodoList() {\n    const orders = useSelector(state => state.orders)\n\n    const dispatch = useDispatch()\n    const addOrder = () => void dispatch({\n        type: ADD_ORDER,\n        payload: { order: StoreOrder.createEmpty() }\n    })\n    const resetOrder = () => void dispatch({\n        type: RESET_ORDERS,\n    })\n    const fetchOrders = () => void dispatch({\n        type: FETCH_ORDERS,\n    })\n\n    useEffect(() => {\n      fetchOrders()\n    }, [])\n\n    return (\n      <Container>\n          <Header>\n              <h1>Andro Video Todo-List</h1>\n              <Button onClick={resetOrder} variant=\"outlined\" color=\"secondary\">Reset</Button>\n          </Header>\n\n          <OrdersWrapper>\n              { orders.length ? orders.map(it => (<Order key={it.id} {...it}/>)) : 'Have no any orders.' }\n          </OrdersWrapper>\n\n          <AddButtonWrapper>\n              <IconButton onClick={addOrder}><AddCircleIcon color=\"primary\" fontSize=\"large\"/></IconButton>\n          </AddButtonWrapper>\n      </Container>\n    );\n}\n","import styled from 'styled-components'\n\nexport const Layout = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 10% 0 0;\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport App from './App.jsx'\nimport { reducer } from './store/orders'\n\nimport 'reset.css'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import React from 'react'\nimport HomePage from './views/TodoList'\n\nimport {\n    Layout\n} from './styled'\n\nexport default function App() {\n  return (\n    <Layout>\n      <HomePage />\n    </Layout>\n  );\n}\n"],"sourceRoot":""}